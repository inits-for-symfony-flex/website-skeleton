---
language: php
# sudo: required # Trying to increase memory.

addons:
  apt:
    packages:
    - colordiff
    - elinks # For dysplaying php files on console.

cache:
  directories:
  - $HOME/.composer/cache/files

php:
- nightly
- 7.3
- 7.2
- 7.1

matrix:
  fast_finish: true
  allow_failures:
  - php: nightly


before_install:
- go get -u github.com/jingweno/ccat
- pip install --user pygments
# - wget https://github.com/travis-util/https-security-checker/archive/master.zip --output-document=- | jar xvf /dev/stdin
# - . https-security-checker-master/init-source.bash
# Disabling Xdebug - Debugger and Profiler Tool for PHP
- |
  php -r "print_r(get_loaded_extensions(TRUE));"
  if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
    cat ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini
    install --directory ~/.phpenv/versions/$(phpenv version-name)/etc/on-demand
    mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ~/.phpenv/versions/$(phpenv version-name)/etc/on-demand
    php -r "print_r(get_loaded_extensions(TRUE));"
  fi


install:
- composer global require sensiolabs/security-checker
- composer install
- composer run-script --list
- composer run-script --verbose -- symfony-skeleton --ansi

- |
  composer create-project --no-install symfony/website-skeleton
  composer --working-dir=website-skeleton config bin-dir bin
  composer --working-dir=website-skeleton install
  composer --working-dir=website-skeleton update symfony/flex
  composer --working-dir=website-skeleton update symfony/yaml
  composer --working-dir=website-skeleton update symfony/console
  composer --working-dir=website-skeleton update symfony/framework-bundle
  composer --working-dir=website-skeleton update sensio/framework-extra-bundle
  composer --working-dir=website-skeleton update symfony/asset
  composer --working-dir=website-skeleton update symfony/expression-language
  composer --working-dir=website-skeleton update symfony/form
  composer --working-dir=website-skeleton update symfony/monolog-bundle
  composer --working-dir=website-skeleton update symfony/orm-pack
  composer --working-dir=website-skeleton update symfony/process
  composer --working-dir=website-skeleton update symfony/security-bundle
  composer --working-dir=website-skeleton update symfony/serializer-pack
  composer --working-dir=website-skeleton update symfony/swiftmailer-bundle
  composer --working-dir=website-skeleton update symfony/twig-bundle
  composer --working-dir=website-skeleton update symfony/validator
  composer --working-dir=website-skeleton update symfony/web-link
  composer --working-dir=website-skeleton update symfony/debug-pack
  composer --working-dir=website-skeleton update symfony/maker-bundle
  composer --working-dir=website-skeleton update symfony/profiler-pack
  composer --working-dir=website-skeleton update symfony/test-pack
  composer --working-dir=website-skeleton update symfony/web-server-bundle
  composer --working-dir=website-skeleton update
# composer update and not install because
# * there is a composer.lock file 
# * and it may be slightly outdated, compared to the fresh update in skeleton directory
# But memory issues: making small etaps!


before_script:
- ~/.composer/vendor/bin/security-checker security:check skeleton/composer.lock
- ~/.composer/vendor/bin/security-checker security:check website-skeleton/composer.lock
# - curl_security_check skeleton/composer.lock
# - curl_security_check website-skeleton/composer.lock
#^ This checks that the application doesn't use dependencies with known security vulnerabilities


script:
- composer --working-dir=skeleton show --latest > skeleton.txt
- composer --working-dir=skeleton why symfony/contracts
- composer --working-dir=skeleton why symfony/http-foundation
- composer --working-dir=website-skeleton show --latest | grep --invert-match symfony/polyfill-ctype > website-skeleton.txt
- composer --working-dir=website-skeleton why symfony/contracts
- composer --working-dir=website-skeleton why symfony/http-foundation
- echo see README.md about symfony/polyfill-ctype
- colordiff --minimal --side-by-side website-skeleton.txt skeleton.txt


after_script:
- composer --working-dir=website-skeleton exec --verbose -- console --ansi
- composer --working-dir=skeleton exec --verbose -- console --ansi


- ls --almost-all --color
- ls --almost-all --color skeleton
- pygmentize -l sh -O linenos=1 skeleton/.env
- pygmentize -l sh -O linenos=1 skeleton/.env.dist
- ls --color skeleton/bin
- php -s skeleton/bin/console | elinks -force-html -dump-color-mode 4 -dump
- ls --almost-all --recursive --color skeleton/var
- ls --color skeleton/src
- ls --recursive --color skeleton/config


- composer --working-dir=website-skeleton show --latest | grep --invert-match symfony/polyfill-ctype 
- composer --working-dir=skeleton show --latest
- $GOPATH/bin/ccat composer.json
- $GOPATH/bin/ccat website-skeleton/composer.json
- $GOPATH/bin/ccat skeleton/composer.json
- colordiff --minimal --side-by-side website-skeleton/composer.json skeleton/composer.json

- composer --working-dir=website-skeleton exec --list
- composer --working-dir=skeleton exec --list
- composer --working-dir=website-skeleton run-script --list
- composer --working-dir=skeleton run-script --list

- composer --working-dir=skeleton exec --verbose -- console list debug --ansi
- composer --working-dir=skeleton exec -vvv -- console --ansi
